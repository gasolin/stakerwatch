{"version":3,"sources":["src/helpers/constants.js","src/helpers/i18n.js","src/components/SearchBar.js","src/helpers/address.js","src/helpers/commonStyle.js","src/hooks/useLocalStorage.js","src/components/DefiExplorer.js","src/components/DefiBalances.js","src/components/Explorers/Explorers.js","src/components/Balance/EthScanBalance.js","src/helpers/jsonRpc.js","src/components/Balance/rpc.js","src/components/Balance/ZkSyncBalance.js","src/components/Balance/Placeholder.js","src/components/Balance/Balance.js","src/components/GasFee/GasFee.js","src/components/SupportUs.js","src/views/Dashboard.js","src/routes/Root.js","App.js"],"names":["CHAIN_MAP","CHAIN_ETHEREUM","CHAIN_BSC","CHAIN_XDAI","L2_ZKSYNC","SUPPORT_CHAINS","Object","keys","i18n","values","title","credit","search","styles","StyleSheet","create","row","flex","flexDirection","SearchBar","chainIdx","onChangeChainIdx","onChangeSearchTerm","term","onSearch","View","style","minWidth","onChangeText","text","placeholder","value","isAddr","data","startsWith","length","isTx","commonStyle","alignSelfCenter","alignSelf","selectIconSize","selectIconColor","selectIconName","selectIconType","buttonMarginRight","marginRight","useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","DefiExplorer","chainId","visible","setVisible","DEFI_DEBANK","explorer","setExplorer","toggleOverlay","name","type","size","onPress","Linking","openURL","addr","DEFI_EXPLORER_ETHEREUM","url","iconStyle","color","ModalComponent","Modal","animationType","transparent","onRequestClose","Title","map","entry","buttonStyle","icon","iconRight","marginTop","getNormalizedNumber","number","decimals","BN","dividedBy","pow","DefiBalances","isValidQuery","balanceOnProtocls","setBalance","useEffect","a","async","defiSdk","DeFiSDK","getNodeURL","getProtocolBalances","balances","fetching","paddingTop","Divider","protocol","metadata","protocolBalances","balance","position","Token","base","symbol","Balance","toString","underlying","forEach","asset","push","Component","Amount","Underlying","Content","Subtitle","token","join","AddrTx","EXPLORER_MAP","chainExplorer","isAddress","explorerUrl","address","tx","Explorers","EthScanBalance","addresses","useEthscanBalance","nativeLoading","nativeBalance","useEthscanTokensBalance","tokenLoading","tokenBalance","wrapperStyle","padEnd","baseFetchOptions","method","headers","jsonRpcFetch","fetch","node","body","then","response","json","idx","rpcTokens","jsonrpc","id","params","ZkSyncBalance","nodeUrl","tokenJson","tokenMap","result","i","committed","entries","sym","Number","toFixed","source","fetchZksyncBalance","Placeholder","includes","GasFee","gasStat","setGasStat","GASNOW","gasEstimator","setGasEstimator","estimator","GAS_ESTIMATOR","api","processGasData","H","M","L","SupportUs","raised","iconSize","container","alignItems","backgroundColor","justifyContent","Root","width","useWindowDimensions","isDesktop","ScrollView","horizontal","App","group","webVersion","nodesVersion","contractsVersion","groupEnd"],"mappings":"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","file":"static/js/app.993d4c23.chunk.js","sourcesContent":["import {\n  CHAIN_ETHEREUM,\n  CHAIN_BSC,\n  CHAIN_XDAI,\n  // CHAIN_MATIC,\n  L2_ZKSYNC,\n} from 'staker-freenodes'\n\nexport const CHAIN_MAP = {\n  [CHAIN_ETHEREUM]: 'Ethereum',\n  [CHAIN_BSC]: 'BSC',\n  [CHAIN_XDAI]: 'xDai',\n  // [CHAIN_MATIC]: 'Polygon',\n  [L2_ZKSYNC]: 'ZkSync',\n}\n\nexport const SUPPORT_CHAINS = Object.keys(CHAIN_MAP)\nexport const CHAIN_NAME_LIST = Object.values(CHAIN_MAP)\n","export const i18n = {\n  en: {\n    title: 'Stakerwat.ch',\n    credit: 'Copyright 2021@Stakerwat.ch',\n    // Address or Transaction ID\n    search: 'Enter address',\n  },\n  props: [],\n}\n","import React from 'react'\nimport { StyleSheet, View } from 'react-native'\nimport { Button, ButtonGroup, Input } from 'react-native-elements'\nimport { CHAIN_NAME_LIST } from 'helpers/constants'\nimport { i18n } from 'helpers/i18n'\n\nconst styles = StyleSheet.create({\n  row: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n})\n\nexport const SearchBar = ({\n  chainIdx,\n  onChangeChainIdx,\n  onChangeSearchTerm,\n  onSearch,\n  term,\n}) => {\n  // flex-1 appearance-none border border-gray-300 w-full py-2 px-4 bg-white text-gray-700 placeholder-gray-400 shadow-sm text-base focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent\n  return (\n    <>\n      {/* <ButtonGroup\n        buttons={CHAIN_NAME_LIST}\n        onPress={onChangeChainIdx}\n        selectedIndex={chainIdx}\n      /> */}\n      <View style={[styles.row, { minWidth: 360 }]}>\n        <Input\n          onChangeText={(text) => onChangeSearchTerm(text)}\n          placeholder={i18n.en.search}\n          value={term}\n        />\n        {/* <Button title='Check' onPress={onSearch} /> */}\n      </View>\n    </>\n  )\n}\n\nexport default SearchBar\n","export const isAddr = (data) => data.startsWith('0x') && data.length === 42\n\nexport const isTx = (data) => data.startsWith('0x') && data.length === 66\n\nexport const checkAddr = (data) => [isAddr(data), isTx(data)]\n","export const commonStyle = {\n  row: { flexDirection: 'row' },\n  alignSelfCenter: { alignSelf: 'center' },\n  selectIconSize: 16,\n  selectIconColor: '#d5d5d5',\n  selectIconName: 'chevron-with-circle-down',\n  selectIconType: 'entypo',\n  buttonMarginRight: { marginRight: 4 },\n}\n\nexport default commonStyle\n","import React, { useState } from 'react'\n\n// https://usehooks.com/useLocalStorage/\nexport default function useLocalStorage(key, initialValue) {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key)\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue\n    } catch (error) {\n      // If error also return initialValue\n      // eslint-disable-next-line no-console\n      console.log(error)\n      return initialValue\n    }\n  })\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value\n      // Save state\n      setStoredValue(valueToStore)\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore))\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      // eslint-disable-next-line no-console\n      console.log(error)\n    }\n  }\n\n  return [storedValue, setValue]\n}\n","import React, { useState } from 'react'\nimport {\n  Avatar,\n  Card,\n  ListItem,\n  Icon,\n  Overlay,\n  Button,\n} from 'react-native-elements'\nimport { Text, Linking, View, Modal } from 'react-native'\nimport { H3 } from '@expo/html-elements'\nimport {\n  DEFI_EXPLORER_ETHEREUM,\n  DEFI_DAPPRADAR,\n  DEFI_DEBANK,\n  DEFI_ZAPPER,\n  DEFI_ZERION,\n} from 'staker-freenodes'\n\nimport commonStyle from 'helpers/commonStyle'\nimport useLocalStorage from 'hooks/useLocalStorage'\n\nexport const DefiExplorer = ({ term, chainId }) => {\n  const [visible, setVisible] = useState(false)\n  const [explorer, setExplorer] = useLocalStorage(`dapp_explorer`, DEFI_DEBANK)\n\n  const toggleOverlay = () => setVisible(!visible)\n\n  const SelectDappExplorerModal = () => (\n    <Modal\n      animationType='slide'\n      transparent\n      visible={visible}\n      onRequestClose={toggleOverlay}\n    >\n      <Card>\n        <Card.Title>Pick the DAPP Explorer </Card.Title>\n        <View style={[commonStyle.row, commonStyle.alignSelfCenter]}>\n          {Object.keys(DEFI_EXPLORER_ETHEREUM).map((entry) => {\n            const { name } = DEFI_EXPLORER_ETHEREUM[entry]\n            // console.log(entry, name)\n            return (\n              <Button\n                key={entry}\n                title={`🏠 ${name}`}\n                type={entry === explorer ? 'solid' : 'outline'}\n                onPress={() => {\n                  toggleOverlay()\n                  setExplorer(entry)\n                }}\n                buttonStyle={{ marginRight: 4 }}\n              />\n            )\n          })}\n        </View>\n        <Button\n          title='Close'\n          icon={{\n            name: 'cross',\n            type: 'entypo',\n            color: '#2089dc',\n          }}\n          iconRight\n          onPress={toggleOverlay}\n          type='outline'\n          style={[commonStyle.alignSelfCenter, { marginTop: 8 }]}\n        />\n      </Card>\n    </Modal>\n  )\n\n  const explorerUrl = (addr) => {\n    const dapp = DEFI_EXPLORER_ETHEREUM[explorer]\n    return dapp.url(addr)\n  }\n\n  return (\n    <View style={[commonStyle.row, commonStyle.alignSelfCenter]}>\n      <Icon\n        name='clipboard'\n        type={commonStyle.selectIconType}\n        size={24}\n        onPress={() => Linking.openURL(explorerUrl(term))}\n        iconStyle={commonStyle.buttonMarginRight}\n      />\n      <Icon\n        name={commonStyle.selectIconName}\n        type={commonStyle.selectIconType}\n        color={commonStyle.selectIconColor}\n        size={24}\n        onPress={toggleOverlay}\n      />\n      <Overlay ModalComponent={SelectDappExplorerModal} />\n    </View>\n  )\n}\n\nexport default DefiExplorer\n","import React, { useEffect, useState } from 'react'\nimport { View } from 'react-native'\nimport { Avatar, Card, ListItem, Text } from 'react-native-elements'\nimport { getNodeURL, CHAIN_ETHEREUM } from 'staker-freenodes'\n\nimport { DeFiSDK } from 'defi-sdk'\nimport BN from 'bignumber.js'\n\nimport { isAddr } from 'helpers/address'\nimport { jsonStringify } from 'helpers/utils'\nimport DefiExplorer from './DefiExplorer'\n\nfunction getNormalizedNumber(number, decimals) {\n  return new BN(number).dividedBy(new BN(10).pow(decimals))\n}\n\nexport const DefiBalances = ({ chainId, term }) => {\n  const isValidQuery = isAddr(term) && chainId === CHAIN_ETHEREUM\n  const [balanceOnProtocls, setBalance] = useState([])\n\n  useEffect(() => {\n    async function fetching() {\n      const defiSdk = new DeFiSDK(getNodeURL(chainId))\n      // TODO: multi selector\n      // const protocols = await defiSdk.getProtocolNames()\n      // console.log(jsonStringify(protocols))\n      const balances = await defiSdk.getProtocolBalances(term, [\n        'Aave',\n        'Aave V2',\n        'Aave V2 • Variable Debt',\n        'Aave V2 • Stable Debt',\n        'Aave • Staking',\n        'Aave • Uniswap Market',\n        'Uniswap V2',\n        'SushiSwap',\n        'SushiSwap • Staking',\n        '1inch Liquidity Protocol',\n        '1inch LP • Staking',\n      ])\n      setBalance(balances)\n    }\n    fetching()\n  }, [chainId, term])\n\n  if (\n    chainId !== CHAIN_ETHEREUM ||\n    !isValidQuery ||\n    balanceOnProtocls.length === 0\n  ) {\n    return null\n  }\n\n  return (\n    <View style={{ paddingTop: 7, flexDirection: 'column' }}>\n      <Card.Title>DEFI</Card.Title>\n      <DefiExplorer chainId={chainId} term={term} />\n      <Card.Divider />\n      {balanceOnProtocls.map((protocol) => {\n        return (\n          <>\n            <Card.Title key={protocol.metadata.name}>\n              {/* <Avatar\n                  size='small'\n                  source={{\n                    uri: protocol.metadata.logo,\n                  }}\n                /> */}\n              {protocol.metadata.name}\n            </Card.Title>\n            {protocol.balances.length > 0 &&\n              protocol.balances.map((protocolBalances) => {\n                // Each adapter could either be an Asset or Debt on the protocol\n                return (\n                  <>\n                    {protocolBalances.balances.map((balance) => {\n                      // console.log(jsonStringify(balance))\n                      const position = {\n                        Token: balance.base.metadata.symbol,\n                        Balance: getNormalizedNumber(\n                          balance.base.balance.toString(),\n                          balance.base.metadata.decimals\n                        ).toString(),\n                      }\n\n                      // If asset is a derivative then there will be underlying assets\n                      if (balance.underlying.length > 0) {\n                        const underlying = []\n                        balance.underlying.forEach((asset) => {\n                          underlying.push({\n                            Component: asset.metadata.symbol,\n                            Amount: getNormalizedNumber(\n                              asset.balance.toString(),\n                              asset.metadata.decimals\n                            ).toString(),\n                          })\n                        })\n                        position.Underlying = underlying\n                      }\n                      // console.log('Position:', position)\n                      return (\n                        <ListItem key={position.Token}>\n                          <ListItem.Content>\n                            <ListItem.Title>\n                              {position.Token} {position.Balance}\n                            </ListItem.Title>\n                            <ListItem.Subtitle>\n                              {position.Underlying.map(\n                                (token) => `${token.Component} ${token.Amount}`\n                              ).join(' ')}\n                            </ListItem.Subtitle>\n                          </ListItem.Content>\n                        </ListItem>\n                      )\n                    })}\n                  </>\n                )\n              })}\n            <Card.Divider />\n          </>\n        )\n      })}\n      {/* <Text>{jsonStringify(balanceOnProtocls)}</Text> */}\n    </View>\n  )\n}\n\nexport default DefiBalances\n","import React, { useState } from 'react'\nimport {\n  Avatar,\n  Card,\n  ListItem,\n  Icon,\n  Overlay,\n  Button,\n} from 'react-native-elements'\nimport { Text, Linking, View, Modal } from 'react-native'\nimport { H3 } from '@expo/html-elements'\nimport { EXPLORER_MAP } from 'staker-freenodes'\n\nimport { CHAIN_MAP } from 'helpers/constants'\nimport { checkAddr } from 'helpers/address'\nimport commonStyle from 'helpers/commonStyle'\nimport useLocalStorage from 'hooks/useLocalStorage'\n\nconst AddrTx = ({ term, chainId }) => {\n  const [visible, setVisible] = useState(false)\n  const [explorer, setExplorer] = useLocalStorage(\n    `${chainId}_explorer`,\n    EXPLORER_MAP[chainId] && Object.keys(EXPLORER_MAP[chainId])[0]\n  )\n  const chainExplorer = EXPLORER_MAP[chainId]\n  if (!chainExplorer) return <H3>Explorer Not found</H3>\n\n  const [isAddress, isTx] = checkAddr(term)\n  // const explorers = Object.keys(chainExplorer)\n\n  const toggleOverlay = () => setVisible(!visible)\n\n  const SelectExplorerModal = () => (\n    <Modal\n      animationType='slide'\n      transparent\n      visible={visible}\n      onRequestClose={toggleOverlay}\n    >\n      <Card>\n        <Card.Title>Pick the {CHAIN_MAP[chainId]} Explorer </Card.Title>\n        <View style={[commonStyle.row, commonStyle.alignSelfCenter]}>\n          {Object.keys(chainExplorer).map((entry) => {\n            const { name } = chainExplorer[entry]\n            // console.log(entry, name)\n            return (\n              <Button\n                key={entry}\n                title={`🏠 ${name}`}\n                type={entry === explorer ? 'solid' : 'outline'}\n                onPress={() => {\n                  toggleOverlay()\n                  setExplorer(entry)\n                }}\n                buttonStyle={{ marginRight: 4 }}\n              />\n            )\n          })}\n        </View>\n        <Button\n          title='Close'\n          icon={{\n            name: 'cross',\n            type: 'entypo',\n            color: '#2089dc',\n          }}\n          iconRight\n          onPress={toggleOverlay}\n          type='outline'\n          style={[commonStyle.alignSelfCenter, { marginTop: 8 }]}\n        />\n      </Card>\n    </Modal>\n  )\n\n  const explorerUrl = () => {\n    if (isAddress) return chainExplorer[explorer].address(term)\n    if (isTx) return chainExplorer[explorer].tx(term)\n    return ''\n  }\n\n  if (explorerUrl) {\n    return (\n      <View style={[commonStyle.row, commonStyle.alignSelfCenter]}>\n        <Icon\n          name='flashlight'\n          type={commonStyle.selectIconType}\n          // color={commonStyle.selectIconColor}\n          size={24}\n          onPress={() => Linking.openURL(explorerUrl())}\n          iconStyle={commonStyle.buttonMarginRight}\n        />\n        {Object.keys(chainExplorer).length > 1 && (\n          <>\n            <Icon\n              name={commonStyle.selectIconName}\n              type={commonStyle.selectIconType}\n              color={commonStyle.selectIconColor}\n              size={24}\n              onPress={toggleOverlay}\n            />\n            <Overlay ModalComponent={SelectExplorerModal} />\n          </>\n        )}\n      </View>\n    )\n  }\n  // if (isAddress) {\n  //   return (\n  //     <>\n  //       {explorers &&\n  //         explorers.map((key) => (\n  //           <ListItem key={chainExplorer[key].name}>\n  //             <Avatar rounded title='🔎' />\n  //             <ListItem.Content>\n  //               <ListItem.Title>\n  //                 <Text\n  //                   onPress={() =>\n  //                     Linking.openURL(chainExplorer[key].address(addr))\n  //                   }\n  //                 >\n  //                   {chainExplorer[key].name}\n  //                 </Text>\n  //               </ListItem.Title>\n  //             </ListItem.Content>\n  //           </ListItem>\n  //         ))}\n  //     </>\n  //   )\n  // }\n  // if (isTx) {\n  //   return (\n  //     <>\n  //       {explorers &&\n  //         explorers.map((key) => (\n  //           <ListItem key={chainExplorer[key].name}>\n  //             <Avatar rounded title='🔎' />\n  //             <ListItem.Content>\n  //               <ListItem.Title>\n  //                 <Text\n  //                   onPress={() => Linking.openURL(chainExplorer[key].tx(addr))}\n  //                 >\n  //                   {chainExplorer[key].name}\n  //                 </Text>\n  //               </ListItem.Title>\n  //             </ListItem.Content>\n  //           </ListItem>\n  //         ))}\n  //     </>\n  //   )\n  // }\n  return <H3>Invalid Address</H3>\n}\n\nexport const Explorers = ({ chainId, term }) => {\n  return (\n    <>\n      {/* <Card>\n      <Card.Title>🔎 {CHAIN_MAP[chainId]} Chain Explorer</Card.Title> */}\n      <AddrTx term={term} chainId={chainId} />\n      {/* </Card> */}\n    </>\n  )\n}\n\nexport default Explorers\n","import React from 'react'\nimport { View } from 'react-native'\nimport { Avatar, Card, ListItem, Text } from 'react-native-elements'\nimport { useEthscanBalance, useEthscanTokensBalance } from 'staker-hooks'\n\nimport { CHAIN_MAP } from 'helpers/constants'\nimport commonStyle from 'helpers/commonStyle'\nimport { DefiBalances } from 'components/DefiBalances'\n// import { DefiStakes } from 'components/DeFi'\nimport { Explorers } from 'components/Explorers'\n\nexport const EthScanBalance = ({ chainId, term }) => {\n  const addresses = [term]\n  const [nativeLoading, nativeBalance] = useEthscanBalance(addresses, chainId)\n  const [tokenLoading, tokenBalance] = useEthscanTokensBalance(\n    addresses,\n    chainId\n  )\n  // console.count('balance')\n  // console.log('>>>', chainId, nativeLoading, tokenLoading)\n\n  if (nativeLoading || tokenLoading) {\n    return (\n      <Card>\n        <Card.Title>💰 {CHAIN_MAP[chainId]} Balance</Card.Title>\n        <Card.Divider />\n        <ListItem>\n          <Text>Loading</Text>\n        </ListItem>\n      </Card>\n    )\n  }\n\n  const balance = [...nativeBalance, ...tokenBalance]\n\n  return (\n    <Card wrapperStyle={commonStyle.row}>\n      <View>\n        <Card.Title>💰 {CHAIN_MAP[chainId]} Balance</Card.Title>\n        <Explorers chainId={chainId} term={term} />\n        <Card.Divider />\n        {balance.length > 0 &&\n          balance.map((token) => (\n            <ListItem key={token.token}>\n              <Text>\n                {token.token.padEnd(20, ' ​')}\n                {token.balance}\n              </Text>\n            </ListItem>\n          ))}\n      </View>\n      <DefiBalances chainId={chainId} term={term} />\n      {/* <DefiStakes chainId={chainId} term={term} /> */}\n    </Card>\n  )\n}\n\nexport default EthScanBalance\n","export const baseFetchOptions = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n}\n\nexport const jsonRpcFetch = (fetch, node, body) =>\n  fetch(node, {\n    ...baseFetchOptions,\n    body,\n  }).then((response) => response.json())\n","// ==== zkSync JSON RPC ===\n// https://zksync.io/api/v0.1.html\n\nlet idx = 1\n\nexport const rpcTokens = JSON.stringify({\n  jsonrpc: '2.0',\n  id: idx++,\n  method: 'tokens',\n  params: [],\n})\n\nexport const rpcZkSyncBalance = (address) =>\n  JSON.stringify({\n    jsonrpc: '2.0',\n    id: idx++,\n    method: 'account_info',\n    params: [address],\n  })\n","import React, { useEffect, useState } from 'react'\nimport { Card, ListItem, Text } from 'react-native-elements'\n\nimport { CHAIN_MAP } from 'helpers/constants'\nimport { jsonRpcFetch } from 'helpers/jsonRpc'\nimport { Explorers } from 'components/Explorers'\n\nimport { rpcTokens, rpcZkSyncBalance } from './rpc'\n\nexport const ZkSyncBalance = ({ chainId, term }) => {\n  const [balance, setBalance] = useState([])\n  const data = []\n  useEffect(() => {\n    async function fetchZksyncBalance() {\n      const addresses = [term]\n      const nodeUrl = 'https://api.zksync.io/jsrpc'\n\n      const tokenJson = await jsonRpcFetch(fetch, nodeUrl, rpcTokens)\n      const tokenMap = tokenJson.result\n\n      for (let i = 0; i < addresses.length; i++) {\n        const json = await jsonRpcFetch(\n          fetch,\n          nodeUrl,\n          rpcZkSyncBalance(addresses[i])\n        )\n        const balances = json.result?.committed?.balances || {}\n        if (Object.keys(balances).length > 0) {\n          Object.entries(balances).forEach(([sym, balance]) => {\n            data.push({\n              // address: addresses[i],\n              token: sym,\n              balance: (Number(balance) / 10 ** tokenMap[sym].decimals).toFixed(\n                4\n              ),\n              source: '',\n            })\n          })\n        }\n      }\n\n      setBalance(data)\n    }\n\n    term && fetchZksyncBalance()\n  }, [term])\n\n  return (\n    <Card>\n      <Card.Title>💰 {CHAIN_MAP[chainId]} Balance</Card.Title>\n      <Explorers chainId={chainId} term={term} />\n      <Card.Divider />\n      {balance.length > 0 &&\n        balance.map((token) => (\n          <ListItem key={token.token}>\n            <Text>\n              {token.token.padEnd(20, ' ​')}\n              {token.balance}\n            </Text>\n          </ListItem>\n        ))}\n    </Card>\n  )\n}\n\nexport default ZkSyncBalance\n","import React from 'react'\nimport { Card, ListItem, Text } from 'react-native-elements'\n\nexport const Placeholder = () => (\n  <Card>\n    <Card.Title>💰 Balance</Card.Title>\n    <Card.Divider />\n    <ListItem>\n      <Text>👷🏻‍♀️ Under Construction</Text>\n    </ListItem>\n  </Card>\n)\n\nexport default Placeholder\n","import React from 'react'\nimport {\n  CHAIN_ETHEREUM,\n  CHAIN_XDAI,\n  CHAIN_BSC,\n  L2_ZKSYNC,\n} from 'staker-freenodes'\n\nimport { isAddr } from 'helpers/address'\nimport { SUPPORT_CHAINS } from 'helpers/constants'\n// import { formatAddressBalances, generateBalanceQuery } from './Balance.helper'\nimport { EthScanBalance } from './EthScanBalance'\nimport { ZkSyncBalance } from './ZkSyncBalance'\nimport { Placeholder } from './Placeholder'\n\nexport const Balance = ({ chainId, term }) => {\n  const isValidQuery = isAddr(term) && SUPPORT_CHAINS.includes(chainId)\n  if (!isValidQuery) return null\n  // console.log('balance of', chainId)\n  switch (chainId) {\n    case CHAIN_ETHEREUM:\n    case CHAIN_XDAI:\n    case CHAIN_BSC:\n      return <EthScanBalance chainId={chainId} term={term} />\n    case L2_ZKSYNC:\n      return <ZkSyncBalance chainId={chainId} term={term} />\n    default:\n      return <Placeholder />\n  }\n}\n\nexport default Balance\n","import React, { useEffect, useState } from 'react'\nimport { Modal, View } from 'react-native'\nimport { Icon, Overlay, Card, Button } from 'react-native-elements'\nimport {\n  GAS_ESTIMATOR_ETHEREUM as GAS_ESTIMATOR,\n  GASNOW,\n  CHAIN_ETHEREUM,\n} from 'staker-freenodes'\n// import _upperCase from 'lodash/upperCase'\nimport { H3 } from '@expo/html-elements'\n\nimport useLocalStorage from 'hooks/useLocalStorage'\nimport commonStyle from 'helpers/commonStyle'\n\nexport const GasFee = ({ chainId = CHAIN_ETHEREUM }) => {\n  const [gasStat, setGasStat] = useState({})\n  const [visible, setVisible] = useState(false)\n  const [gasEstimator, setGasEstimator] = useLocalStorage('gas', GASNOW)\n\n  useEffect(() => {\n    // if (chainId !== CHAIN_ETHEREUM) return\n    const estimator = GAS_ESTIMATOR[gasEstimator]\n    fetch(estimator.api)\n      .then((response) => response.json())\n      .then((json) => {\n        const data = estimator.processGasData(json)\n        setGasStat(data)\n      })\n  }, [chainId, gasEstimator])\n\n  if (chainId !== CHAIN_ETHEREUM) return null\n\n  const toggleOverlay = () => setVisible(!visible)\n\n  const SelectGasModal = () => (\n    <Modal\n      animationType='slide'\n      transparent\n      visible={visible}\n      onRequestClose={toggleOverlay}\n    >\n      <Card>\n        <Card.Title>Pick a Gas Estimator </Card.Title>\n        <View style={[commonStyle.row, commonStyle.alignSelfCenter]}>\n          {Object.keys(GAS_ESTIMATOR).map((estimator) => {\n            const { name } = GAS_ESTIMATOR[estimator]\n            // console.log(estimator, name)\n            return (\n              <Button\n                key={estimator}\n                title={`⛽️ ${name}`}\n                type={gasEstimator === estimator ? 'solid' : 'outline'}\n                onPress={() => {\n                  toggleOverlay()\n                  setGasEstimator(estimator)\n                }}\n                buttonStyle={commonStyle.buttonMarginRight}\n              />\n            )\n          })}\n        </View>\n        <Button\n          title='Close'\n          icon={{\n            name: 'cross',\n            type: 'entypo',\n            color: '#2089dc',\n          }}\n          iconRight\n          onPress={toggleOverlay}\n          type='outline'\n          style={[commonStyle.alignSelfCenter, { marginTop: 8 }]}\n        />\n      </Card>\n    </Modal>\n  )\n\n  // return (\n  //   <Card>\n  //     <Card.Title>\n  //       ⛽️ Gas Fee (via {_upperCase(gasStat.source) || ''})\n  //     </Card.Title>\n  //     <Card.Divider />\n  //     <ListItem style={{ alignSelf: 'center' }}>\n  //       <Text style={{ fontSize: 32 }}>\n  //         🚀{gasStat.H} 🚘{gasStat.M} 🚲{gasStat.L}\n  //       </Text>\n  //       {/* <Text style={{ fontSize: 48 }}>🚘 {gasStat.M}</Text> */}\n  //     </ListItem>\n  //   </Card>\n  // )\n  return (\n    <H3>\n      🚀{gasStat.H} 🚘{gasStat.M} 🚲{gasStat.L}{' '}\n      <Icon\n        name={commonStyle.selectIconName}\n        type={commonStyle.selectIconType}\n        color={commonStyle.selectIconColor}\n        size={commonStyle.selectIconSize}\n        onPress={toggleOverlay}\n      />\n      <Overlay ModalComponent={SelectGasModal} />\n    </H3>\n  )\n}\n\nexport default GasFee\n","import React from 'react'\nimport { Text, Linking, View } from 'react-native'\nimport { Card, SocialIcon } from 'react-native-elements'\nimport { P } from '@expo/html-elements'\n\nimport { i18n } from 'helpers/i18n'\n\nexport const SupportUs = () => (\n  <Card>\n    {/* <Text>Stakerwat.ch is rising funding in Gitcoin Grant 9.</Text>\n    <H4\n      style={{ color: 'blue', alignSelf: 'center' }}\n      onPress={() =>\n        Linking.openURL('https://gitcoin.co/grants/1664/stakerwatch')\n      }\n    >\n      Support Us Here\n    </H4>\n    <Card.Divider /> */}\n    <View style={{ flexDirection: 'row-reverse' }}>\n      <SocialIcon\n        raised={false}\n        type='twitter'\n        onPress={() => Linking.openURL('https://twitter.com/stakerwatch')}\n        iconSize={16}\n      />\n      <SocialIcon\n        raised={false}\n        type='github'\n        onPress={() =>\n          Linking.openURL('https://github.com/gasolin/stakerwatch')\n        }\n        iconSize={16}\n      />\n      <P>{i18n.en.credit}</P>\n    </View>\n  </Card>\n)\n\nexport default SupportUs\n","// import { StatusBar } from 'expo-status-bar'\nimport React from 'react'\nimport { StyleSheet, View, ScrollView, useWindowDimensions } from 'react-native'\nimport { H1, Header, Main, Footer } from '@expo/html-elements'\n\nimport { SearchBar } from 'components/SearchBar'\nimport { Balance } from 'components/Balance'\nimport { GasFee } from 'components/GasFee'\nimport { SupportUs } from 'components/SupportUs'\nimport useLocalStorage from 'hooks/useLocalStorage'\nimport { SUPPORT_CHAINS } from 'helpers/constants'\nimport { i18n } from 'helpers/i18n'\n\nconst bgColor = 'white'\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    backgroundColor: bgColor,\n    flex: 1,\n    justifyContent: 'center',\n  },\n})\n\nexport default function Root() {\n  const [term, onChangeSearchTerm] = useLocalStorage('addr', '')\n  const { width } = useWindowDimensions()\n  // TOOD: masonry layout\n  const isDesktop = width > 963\n  // const [chainIdx, onChangeChainIdx] = useLocalStorage('chainId', 0)\n  // const chainId = SUPPORT_CHAINS[chainIdx]\n  // const onSearch = () => {\n  //   console.log(term, chainId)\n  // }\n\n  return (\n    <View style={styles.container}>\n      <Header style={{ alignItems: 'center' }}>\n        <H1>{i18n.en.title}</H1>\n        <GasFee />\n      </Header>\n      <Main>\n        <SearchBar\n          // chainIdx={chainIdx}\n          // onChangeChainIdx={onChangeChainIdx}\n          term={term}\n          onChangeSearchTerm={onChangeSearchTerm}\n          // onSearch={onSearch}\n        />\n        <ScrollView horizontal={isDesktop}>\n          <View\n            style={\n              isDesktop\n                ? { flexDirection: 'row', width: width * 0.8 }\n                : { flexDirection: 'column' }\n            }\n          >\n            {SUPPORT_CHAINS.map((chainId, idx) => (\n              <Balance key={chainId} chainId={chainId} term={term} />\n            ))}\n          </View>\n        </ScrollView>\n      </Main>\n      <Footer>\n        <SupportUs />\n      </Footer>\n      {/* <StatusBar style=\"auto\" /> */}\n    </View>\n  )\n}\n","import React from 'react'\nimport { SafeAreaProvider } from 'react-native-safe-area-context'\n\nimport Dashboard from 'views/Dashboard'\n\nexport default function Root() {\n  return (\n    <SafeAreaProvider>\n      <Dashboard />\n    </SafeAreaProvider>\n  )\n}\n","import React from 'react'\nimport { version as nodesVersion } from 'staker-freenodes/package.json'\nimport { version as contractsVersion } from 'staker-contracts/package.json'\n\nimport Root from 'routes/Root'\nimport { version as webVersion } from './package.json'\n\nconst label = 'versions'\nconst App = () => {\n  /* eslint-disable */\n  console.log(\n    'commandline version is available, check https://www.npmjs.com/package/staker'\n  )\n  console.group(label);\n  console.log(`web v${webVersion}`)\n  console.log(`staker-freenodes v${nodesVersion}`)\n  console.log(`staker-contracts v${contractsVersion}`)\n  console.groupEnd(label);\n  /* eslint-enable */\n  return <Root />\n}\nexport default App\n"],"sourceRoot":""}